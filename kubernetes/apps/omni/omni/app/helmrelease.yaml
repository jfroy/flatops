---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app omni
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    controllers:
      omni:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/siderolabs/omni
              tag: v0.35.0@sha256:2b6a5746920a2fb8eb22c1e2459670307c73662aba25274e040887427a649cc6
            args:
              - --account-id=${OMNI_ACCOUNT_UUID}
              - --name=*app
              - --private-key-source=file:///secrets/omni.asc
              - --event-sink-port=8091
              - --log-server-port=8092
              - --bind-addr=0.0.0.0:80
              - --machine-api-bind-addr=0.0.0.0:8090
              - --k8s-proxy-bind-addr=0.0.0.0:8100
              - --advertised-api-url=https://omni.${SECRET_DOMAIN}/
              - --siderolink-api-advertised-url=https://omni-grpc.${SECRET_DOMAIN}/
              - --siderolink-wireguard-advertised-addr=10.100.0.30:50180
              - --advertised-kubernetes-proxy-url=https://omni-proxy.${SECRET_DOMAIN}/
              - --auth-auth0-enabled=true
              - --auth-auth0-domain=${OMNI_AUTH0_DOMAIN}
              - --auth-auth0-client-id=${OMNI_AUTH0_CLIENT_ID}
              - --initial-users=jf@devklog.net
            env:
              TZ: America/Los_Angeles
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - NET_ADMIN
              readOnlyRootFilesystem: true
    service:
      app:
        controller: omni
        ports:
          http:
            port: 80
      grpc:
        controller: omni
        primary: false
        ports:
          http:
            port: 8090
      k8s-proxy:
        controller: omni
        primary: false
        ports:
          http:
            port: 8100
      wireguard:
        controller: omni
        primary: false
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "10.100.0.30"
        ports:
          wireguard:
            port: 50180
            protocol: UDP
    ingress:
      omni:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "omni.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
      grpc:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        hosts:
          - host: "omni-grpc.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: grpc
      proxy:
        className: internal
        hosts:
          - host: "omni-proxy.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: k8s-proxy
    serviceAccount:
      create: true
      name: omni
    persistence:
      net-tun:
        type: hostPath
        hostPath: /dev/net/tun
      out:
        type: persistentVolumeClaim
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /_out
      run:
        type: emptyDir
        globalMounts:
          - path: /run
          - path: /var/run
      secrets:
        type: secret
        name: omni-secrets
