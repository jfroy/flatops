---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: whisparr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/jfroy/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: whisparr-secret
              - secretRef:
                  name: whisparr-initdb-secret
        containers:
          whisparr:
            image:
              repository: ghcr.io/jfroy/whisparr-nightly
              tag: 2.0.0.787@sha256:65730d92b55b3ae99d4443c2d5fba73e34010b0cb728b136e19ec1700b88363a
            env:
              WHISPARR__ANALYTICS_ENABLED: "False"
              WHISPARR__AUTHENTICATION_METHOD: External
              WHISPARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              WHISPARR__BRANCH: develop
              WHISPARR__INSTANCE_NAME: Whisparr
              WHISPARR__LOG_LEVEL: info
              WHISPARR__PORT: &port 80
              TZ: America/Los_Angeles
            envFrom:
              - secretRef:
                  name: whisparr-secret
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4000]
        seccompProfile: { type: RuntimeDefault }
    service:
      whisparr:
        controller: whisparr
        ports:
          http:
            port: *port
    ingress:
      whisparr:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/start?rd=$scheme://$best_http_host$request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-email"
        hosts:
          - host: "${APP_SUBDOMAIN:-${APP}}.${PUBLIC_DOMAIN0}"
            paths:
              - path: /
                service:
                  identifier: whisparr
                  port: http
    persistence:
      config:
        existingClaim: ${APP}
      media:
        type: persistentVolumeClaim
        existingClaim: media-smb-media1
      tmp:
        type: emptyDir
