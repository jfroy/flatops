---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: homepage
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    controllers:
      homepage:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          homepage:
            image: &image
              repository: ghcr.io/gethomepage/homepage
              tag: v0.9.9@sha256:5c264918d2d18a753da8657fee7e0579c8b11581b19275d9a93fde76a8267f3c
            env:
              TZ: America/Los_Angeles
            envFrom:
              - secretRef:
                  name: homepage-secret
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthcheck
                    port: &port 3000
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 1m
              limits:
                memory: 500Mi
        initContainers:
          copy-nextjs:
            image: *image
            command:
              - "/bin/cp"
              - "-r"
              - "/app/.next/server/pages"
              - "/pages"
            securityContext: *securityContext
    serviceAccount:
      create: true
      name: homepage
    service:
      homepage:
        controller: homepage
        type: ClusterIP
        ports:
          http:
            port: *port
    ingress:
      homepage:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/start?rd=$scheme://$best_http_host$request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-email"
        hosts:
          - host: ${APP_SUBDOMAIN:-${APP}}.${PUBLIC_DOMAIN0}
            paths:
              - path: /
                service:
                  identifier: homepage
                  port: http
    persistence:
      homepage-config:
        type: configMap
        name: homepage-config
        globalMounts:
          - path: /app/config
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/config/logs
      cache:
        type: emptyDir
        globalMounts:
          - path: /app/.next/cache
      pages:
        type: emptyDir
        advancedMounts:
          homepage:
            homepage:
              - path: /app/.next/server/pages
                subPath: pages
            copy-nextjs:
              - path: /pages
