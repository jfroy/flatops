---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: registry
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    controllers:
      registry:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          registry:
            image: &image
              repository: registry
              tag: 3.0.0-beta.1
            command:
              - /bin/registry
              - serve
              - /etc/distribution/config.yml
            env: &env
              OTEL_TRACES_EXPORTER: none
              TZ: America/Los_Angeles
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              limits:
                memory: 256Mi
      gc:
        type: cronjob
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          schedule: "0 4 * * *"
        containers:
          gc:
            image: *image
            command:
              - /bin/registry
              - garbage-collect
              - /etc/distribution/config.yml
            env: *env
            securityContext: *securityContext
    service:
      registry:
        controller: registry
        type: ClusterIP
        ports:
          http:
            port: 5000
          metrics:
            port: 5001
    ingress:
      registry:
        className: internal
        hosts:
          - host: ${APP_SUBDOMAIN:-${APP}}.${PUBLIC_DOMAIN0}
            paths:
              - path: /
                service:
                  identifier: registry
                  port: http
    serviceMonitor:
      registry:
        enabled: true
        serviceName: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}'
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      config:
        type: configMap
        name: registry-config
        globalMounts:
          - path: /etc/distribution
            readOnly: true
      storage:
        existingClaim: ${APP}
        globalMounts:
          - path: /var/lib/registry
