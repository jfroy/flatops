---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dashbrr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
    controllers:
      dashbrr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/jfroy/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: dashbrr-secret
              - secretRef:
                  name: dashbrr-initdb-secret
        containers:
          dashbrr:
            image:
              repository: ghcr.io/autobrr/dashbrr
              tag: pr-67
              pullPolicy: Always
            env:
              DASHBRR__CONFIG_PATH: /config/config.toml
              DASHBRR__DB_PATH: /cache/._  # cache path is derived from DASHBRR__DB_PATH
              DASHBRR__LISTEN_ADDR: 0.0.0.0:8080
              GIN_MODE: debug
              TZ: America/Los_Angeles
            envFrom:
              - secretRef:
                  name: dashbrr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    ingress:
      dashbrr:
        className: internal
        hosts:
          - host: "${APP_SUBDOMAIN:-${APP}}.${PUBLIC_DOMAIN0}"
            paths:
              - path: /
                service:
                  identifier: dashbrr
                  port: http
    service:
      dashbrr:
        controller: dashbrr
        ports:
          http:
            port: 8080
    serviceAccount:
      create: true
      name: dashbrr
    persistence:
      cache:
        type: emptyDir
        sizeLimit: 1Gi
      config:
        type: configMap
        name: dashbrr-config
