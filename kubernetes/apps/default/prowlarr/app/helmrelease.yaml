---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/jfroy/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: prowlarr-secret
              - secretRef:
                  name: prowlarr-initdb-secret
        containers:
          prowlarr:
            image:
              repository: ghcr.io/jfroy/prowlarr-develop
              tag: 1.28.1.4879@sha256:0f7d067172f505a02b25d476091d0a64a475e42942959df8acd420e1d9ccc643
            env:
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__APP__THEME: auto
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__LOG__DBENABLED: "False"
              PROWLARR__SERVER__PORT: &port 80
              PROWLARR__UPDATE__BRANCH: develop
              TZ: America/Los_Angeles
            envFrom:
              - secretRef:
                  name: prowlarr-secret
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4000]
        seccompProfile: { type: RuntimeDefault }
    service:
      prowlarr:
        controller: prowlarr
        ports:
          http:
            port: *port
    ingress:
      prowlarr:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/start?rd=$scheme://$best_http_host$request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-email"
        hosts:
          - host: "${APP_SUBDOMAIN:-${APP}}.${PUBLIC_DOMAIN0}"
            paths:
              - path: /
                service:
                  identifier: prowlarr
                  port: http
    persistence:
      config:
        type: emptyDir
      tmp:
        type: emptyDir
