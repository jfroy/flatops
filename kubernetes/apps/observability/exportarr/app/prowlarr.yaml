---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr-exporter
  labels:
    app.kubernetes.io/instance: prowlarr
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/instance: prowlarr
  ports:
    - name: monitoring
      port: 9707
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prowlarr-exporter
  labels:
    app.kubernetes.io/instance: prowlarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: prowlarr
  endpoints:
    - port: monitoring
      interval: 5m
      scrapeTimeout: 12h
      path: /metrics
      metricRelabelings:
        - action: replace
          replacement: prowlarr.default
          targetLabel: instance
        - action: labeldrop
          regex: (pod)
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: prowlarr-exporter
  labels:
    app.kubernetes.io/instance: prowlarr
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: prowlarr
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: prowlarr
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "monitoring"
    spec:
      containers:
        - name: prowlarr-exporter
          image: ghcr.io/onedr0p/exportarr:v2.1.0@sha256:ffe2065573db0f9717443143316eac6b335c37e6f6fea2f6a238ef3f134ee50a
          imagePullPolicy: IfNotPresent
          args:
            - prowlarr
          env:
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: prowlarr-exporter
                  key: api-key
            - name: PORT
              value: "9707"
            - name: PROWLARR__BACKFILL
              value: "true"
            - name: URL
              value: "http://prowlarr.default.svc.cluster.local:80"
          ports:
            - name: monitoring
              containerPort: 9707
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
