---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: loki
spec:
  interval: 5m
  timeout: 15m
  chart:
    spec:
      chart: loki
      version: 5.43.6
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  dependsOn:
    - name: openebs
      namespace: openebs-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    loki:
      auth_enabled: false
      memberlist: loki-memberlist
      commonConfig:
        replication_factor: 1
      storage:
        bucketNames:
          chunks: loki
          ruler: loki
          admin: loki
        type: s3
        s3:
          endpoint: minio.storage.svc
          secretAccessKey: "${CONSOLE_SECRET_KEY}"
          accessKeyId: "${CONSOLE_ACCESS_KEY}"
          s3ForcePathStyle: true
          insecure: false
      schemaConfig:
        configs:
          - from: "2024-01-01"
            index:
              period: 24h
              prefix: index_
            object_store: s3
            schema: v12
            store: tsdb
      query_scheduler:
        max_outstanding_requests_per_tenant: 32768
      storage_config:
        tsdb_shipper:
          shared_store: s3
      querier:
        max_concurrent: 16
    test:
      enabled: false
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      serviceMonitor:
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false
    write:
      replicas: 1
      extraArgs: &extraArgs
        - "-config.expand-env=true"
      extraEnvFrom: &extraEnvFrom
        - secretRef:
            name: minio-loki
      persistence: &persistence
        storageClass: openebs-hostpath
    read:
      replicas: 1
      extraArgs: *extraArgs
      extraEnvFrom: *extraEnvFrom
      persistence: *persistence
    backend:
      replicas: 1
      extraArgs: *extraArgs
      extraEnvFrom: *extraEnvFrom
      persistence: *persistence
    ingress:
      enabled: true
      ingressClassName: internal
    gateway:
      enabled: false
