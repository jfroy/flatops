---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 5m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 56.21.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  dependsOn:
    - name: openebs
      namespace: openebs-system
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: false
    grafana:
      enabled: false
    kubeApiServer:
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubelet:
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeControllerManager:
      endpoints: &cp
        - 10.17.3.10
      # service:
        # selector:
        #   k8s-app: kube-controller-manager
    kubeEtcd:
      endpoints: *cp
    kubeScheduler:
      endpoints: *cp
    kubeProxy:
      enabled: false
      forceDeployDashboards: true
    kube-state-metrics:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__meta_kubernetes_pod_node_name]
              separator: ;
              regex: ^(.*)$
              targetLabel: nodename
              replacement: $1
              action: replace
    prometheus-node-exporter:
      prometheus:
        monitor:
          relabelings:
            - sourceLabels: [__meta_kubernetes_pod_node_name]
              separator: ;
              regex: ^(.*)$
              targetLabel: nodename
              replacement: $1
              action: replace
    # prometheusOperator:
    #   thanosImage:
    #     registry: quay.io
    #     repository: thanos/thanos
    #     tag: "${THANOS_VERSION}"
    prometheus:
      # thanosService:
      #   enabled: true
      # thanosServiceMonitor:
      #   enabled: true
      prometheusSpec:
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: talos-dev
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        retention: 2d
        retentionSize: 5GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 10Gi
        # thanos:
        #   image: quay.io/thanos/thanos:${THANOS_VERSION}
        #   version: "${THANOS_VERSION#v}"
