---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kps
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 61.3.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  dependsOn:
    - name: openebs
      namespace: openebs-system
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  values:
    nameOverride: *app
    cleanPrometheusOperatorObjectNames: true

    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.${PUBLIC_DOMAIN0}/oauth2/start?rd=$scheme://$best_http_host$request_uri
        hosts:
          - alm.${PUBLIC_DOMAIN0}
        paths:
          - /
        pathType: Prefix
      alertmanagerSpec:
        replicas: 1
        alertmanagerConfiguration:
          name: cluster
          global:
            resolveTimeout: 5m
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 1Gi

    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
          multicluster:
            etcd:
              enabled: true

    kubeApiServer:
      serviceMonitor:
        metricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: apiserver_(response|watch_events)_sizes_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: apiserver_request_body_size_bytes_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: workqueue_(work|queue)_duration_seconds_bucket

    kubelet:
      serviceMonitor:
        cAdvisorMetricRelabelings:
          # Drop less useful container CPU metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
          # Drop less useful / always zero container memory metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_memory_(failures_total|mapped_file|swap)'
          # Drop less useful container process metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_(file_descriptors|tasks_state|threads_max)'
          # Drop less useful container filesystem metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
          # Drop less useful container blkio metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_blkio_device_usage_total'
          # Drop container spec metrics that overlap with kube-state-metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_spec.*'
          # Drop cgroup metrics with no pod.
          - sourceLabels: [id, pod]
            action: drop
            regex: '.+;'
          # Drop high-cardinality labels.
          - action: labeldrop
            regex: (uid|id|name|pod_uid|interface)
        probesMetricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: prober_probe_duration_seconds_bucket
        metricRelabelings:
          # Drop high-cardinality labels.
          - action: labeldrop
            regex: (uid|id|name|pod_uid|interface)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeControllerManager:
      endpoints: &cp
        - 192.168.1.13
      serviceMonitor:
        metricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: workqueue_(work|queue)_duration_seconds_bucket

    kubeEtcd:
      endpoints: *cp

    kubeScheduler:
      endpoints: *cp
      serviceMonitor:
        metricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: workqueue_(work|queue)_duration_seconds_bucket
          - action: drop
            regex: scheduler_plugin_execution_duration_seconds_bucket;(0.005|0.01|0.025|0.05|0.1|0.15|0.2|0.25|0.3|0.35|0.4|0.45|0.5|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|2.5|3|3.5|4|4.5|5|6|7|8|9|15|20|25|30|40|50)
            sourceLabels: ["__name__", "le"]

    kubeProxy:
      enabled: false  # KubeProxy is disabled in the cluster, see Cilium/Talos configs

    nodeExporter:
      enabled: false  # node-exporter must be in observability-agents
      forceDeployDashboards: true

    prometheusOperator:
      fullnameOverride: prometheus-operator
      admissionWebhooks:
        certManager:
          enabled: true
          admissionCert:
            duration: 2160h  # 90d
          issuerRef:
            name: cluster-ca
            kind: ClusterIssuer
            group: cert-manager.io

    prometheus:
      enabled: false  # Using VictoriaMetrics
      prometheusSpec:
        # Must match grafana datasources.datasources.yaml.datasources.Prometheus.jsonData.timeInterval
        scrapeInterval: 30s
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: kantai
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        retention: 2d
        retentionSize: 5GB
        resources:
          requests:
            cpu: 250m
            memory: 2Gi
          limits:
            cpu: 1000m
            memory: 8Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 100Gi
        # topologySpreadConstraints:
        #   - maxSkew: 1
        #     topologyKey: "kubernetes.io/hostname"
        #     whenUnsatisfiable: "DoNotSchedule"
        #     labelSelector:
        #       matchLabels:
        #         prometheus: "kps"

  postRenderers:
    - kustomize:
        patches:
          - target:
              group: monitoring.coreos.com
              version: v1
              kind: ServiceMonitor
              name: kps-kubelet
            patch: |
              - op: add
                path: /spec/endpoints/0/trackTimestampsStaleness
                value: true
              - op: add
                path: /spec/endpoints/1/trackTimestampsStaleness
                value: true
              - op: add
                path: /spec/endpoints/2/trackTimestampsStaleness
                value: true
