---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/jfroy/postgres-init
              tag: 16
            env: &env
              INIT_POSTGRES_DBNAME: gatus
              INIT_POSTGRES_HOST: postgres16-rw.database.svc.cluster.local
              INIT_POSTGRES_USER: gatus
            envFrom:
              - secretRef:
                  name: gatus-secret
              - secretRef:
                  name: gatus-initdb-secret
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          config-sync:
            dependsOn: init-db
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.27.6@sha256:db85bd5532530d288736b35e63baceacbf570bf863d85a0404b33c1e1631f63b
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: configmap
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            securityContext: *securityContext
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.12.1@sha256:3cc4e90534c05599f07fbdf15580401aa7771fac15f51d1dc8f7de265d70d12f
            env:
              <<: *env
              TZ: America/Los_Angeles
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              WEB_PORT: &port 80
            envFrom:
              - secretRef:
                  name: gatus-secret
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
              readiness: *probe
            resources:
              requests:
                cpu: 1m
              limits:
                memory: 128Mi
            securityContext: *securityContext
    defaultPodOptions:
      dnsConfig:
        options:
          - { name: ndots, value: "1" }
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${PUBLIC_DOMAIN0}
        hosts:
          - host: status.${PUBLIC_DOMAIN0}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceAccount:
      create: true
      name: gatus
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-config
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
