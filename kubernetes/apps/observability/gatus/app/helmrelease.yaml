---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      gatus:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            env: &env
              INIT_POSTGRES_DBNAME: gatus
              INIT_POSTGRES_HOST: pg17vc-rw.database.svc.cluster.local
              INIT_POSTGRES_USER: gatus
            envFrom:
              - secretRef:
                  name: gatus-secret
              - secretRef:
                  name: gatus-initdb-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          gatus-sidecar:
            dependsOn: init-db
            image:
              repository: ghcr.io/home-operations/gatus-sidecar
              tag: 0.0.9@sha256:31a52dd0e579c1f865b2580a4bb715d2a893deb1351fedeaba73598e9a578cbe
            args:
              - --auto-httproute=true
            restartPolicy: Always
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        containers:
          gatus:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.26.0@sha256:3c0314bd1b1e9d7c34d8f2efee16b380770a9639ec5386cc305e8df104e097dc
            env:
              <<: *env
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              TZ: America/Los_Angeles
              WEB_PORT: &port 80
            envFrom:
              - secretRef:
                  name: gatus-secret
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
              readiness: *probe
        pod:
          hostUsers: false
        statefulset:
          volumeClaimTemplates:
            - name: config
              storageClass: ceph-block
              accessMode: ReadWriteOnce
              size: 1Gi
    persistence:
      config-file:
        type: configMap
        name: "{{ .Release.Name }}-configmap"
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
    rbac:
      roles:
        gatus:
          type: ClusterRole
          rules:
            - apiGroups: [""]
              resources: ["configmaps"]
              verbs: ["get", "watch", "list"]
            - apiGroups: [""]
              resources: ["services"]
              verbs: ["get", "list", "watch"]
            - apiGroups: ["networking.k8s.io"]
              resources: ["ingresses"]
              verbs: ["get", "list", "watch"]
            - apiGroups: ["gateway.networking.k8s.io"]
              resources: ["httproutes", "gateways"]
              verbs: ["get", "list", "watch"]
      bindings:
        gatus:
          type: ClusterRoleBinding
          roleRef:
            identifier: gatus
          subjects:
            - identifier: gatus
    route:
      gatus:
        annotations:
          gatus.home-operations.com/enabled: "true"
          gatus.home-operations.com/endpoint: |-
            conditions: ["[STATUS] == 200"]
        hostnames:
          - "{{ .Release.Name }}.kantai.xyz"
          - status.kantai.xyz
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
    service:
      gatus:
        ports:
          http:
            port: *port
    serviceAccount:
      gatus: {}
    serviceMonitor:
      gatus:
        endpoints:
          - port: http
            metricRelabelings:
              - action: labeldrop
                regex: (pod)
